# news-crawl 배포용 
steps:
  # docker file 빌드
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build
  # 컨테이너 이미지 저장
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push
  # 서비스(cloud run)배포
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run # cloud run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed' # GCP에서 관리
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID
      - '--region=$_DEPLOY_REGION' # 서비스가 배포될 지역
      - '--quiet'
      - '--cpu=4' # 배포될 서비스의 각 인스턴스의 cpu 개수
      - '--memory=4Gi' # 배포될 서비스의 각 인스턴스의 메모리
      - '--concurrency=1' # 배포될 서비스에서 각 인스턴스가 최대로 처리 가능한 요청의 개수(동시성)
      - '--max-instances=250' # 배포될 서비스의 최대 인스턴스 개수
      - '--timeout=360' # 배포될 서비스의 최대 요청시간
      - '--port=3001' # 배포될 서비스의 각 인스턴스 port(이렇게 설정해도 https 포트로 접속해야함)
    id: Deploy
    entrypoint: gcloud
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
timeout: 1200s # 빌드 제한시간, 빌드 시간초과가 된다면 timeout수치를 조정
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _DEPLOY_REGION: asia-northeast3 # 위에서 사용될 배포 지역
  _GCR_HOSTNAME: asia.gcr.io # 위에서 사용될 컨테이너 저장 위치
  _PLATFORM: managed # 위에서 사용될 관리 방식
  _SERVICE_NAME: news-crawl # 위에서 사용될 서비스 이름
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - news-crawl